{
  "hash": "7d04bc355d0ed41f34c9ea451f1dd367",
  "result": {
    "markdown": "---\ntitle: \"Auto-Correlation & Stationarity - Part 1\"\nauthor: \"Francois de Ryckel\"\ndate: '2022-09-29'\ncategories: [time-series]\ndate-modified: '2022-09-09'\n---\n\n\n# Autovariance & autocorrelation \n\nAuto-correlation as the name indicates is the correlation of the time-series with itself ... well, with a lag version of itself. \n\nLet's consider $\\{X_t\\}$ a time series.  \n\n*   Then the mean function of $\\{X_t\\}$ (the first moment) is defined as $\\mu_t = \\textbf{E}(X_t)$.  In other words, $\\mu_t$ is the expected value of the time series at point t.  \n*   The Variance of the time series is defined as $\\sigma_t ^2 = Var(X_t) = \\textbf{E}[(X_t - \\mu_t)^2]$. \n*   In general, $\\mu_t$ and $\\sigma_t ^2$ are different at different point in time. \n\nNow, we define the **autocovariance** function of the time series as $$\\gamma(s, t) = Cov(X_s, X_t) = \\textbf{E}[(X_s - \\mu_s)(X_t - \\mu_t)]$$. \nIn the same vein, we define the **autocorrelation** function of the time series as \n$$\\rho(s,t) = Corr(X_s, X_t) = \\frac {\\gamma (s, t)}{\\sigma_s \\sigma_t} = \\frac{Cov(X_s, X_t)}{\\sqrt{Var(X_s) Var(X_t)}}$$\n\nAutocovariance and autocorrelation measure the linear correlation between between two points $X_s$ and $X_t$ on the same time-series. \n\nFew properties of autocavariance and autocorrelation of time-series \n\n* $\\gamma(t, t) = \\sigma_t^2$ \n* $\\gamma(s, t) = \\gamma(t, s)$ \n* $|\\gamma(s, t)| \\le \\sigma_s \\sigma_t$ \n* $\\rho(t, t) \\equiv 1$\n\n# Stationarity \n\nA time-series $\\{X_t\\}$ is (weakly) stationary if: \n\n* $E[x_t] = \\mu$ is a constant \n* $E[X_t^2] < \\infty$ \n* $Cov(X_t, X_{t+k}) = \\gamma(k)$ is independent of t for each integer k. $\\gamma(k)$ is called the lag $k$ autocovariance of function of $\\{X_t\\}$\n\n# White Noise \n\nWhite noise is a special type of time-series and a special case of stationarity. \n\n$\\{W_t\\}$ is a white-noise if \n\n* $E[W_t] = \\mu$ is a constant for all t\n* $Var[W_t] = \\sigma_w^2$ is a constant \n* $Cov(W_s, W_t) = 0$ for any s and t with $s<t$.  In other words, any 2 subset of W are uncorrelated. \n\nIf $\\{X_t\\}$ is iid (independent and identically distributed) and $\\rho(k) = 1$ (when k=0) and $\\rho(k) = 0$ (otherwise, aka for any other values of k), then $\\{X_t\\}$ is a white noise. \n\nTherefore, as $n \\rightarrow \\infty$, we can say that $\\frac{1}{n} (X_1 + \\dots + X_n) = E[X_t] = \\mu$\n\nWe can generate white-noise in R using the arima.sim() function.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tibble)\n\n\nset.seed(1234)\n# Generate a white noise in R\nwn <- stats::arima.sim(model = list(order = c(0, 0, 0)), n = 250)\ndf <- tibble(x = 1:250, y = as.vector(wn))\n\nggplot(df, aes(x, y)) + \n  geom_line(color = 'dodgerblue3') + \n  xlab('Time') + ylab('White Noise') + \n  labs(title = 'Generated White Noise')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nAnd let's check the autocorrelation plot to visually confirm that. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using the standard R function. \nacf(wn, lag.max = 20)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nWe could also use a ggplot function to plot the auto-correlation of our time-series. \n\n::: {.cell}\n\n```{.r .cell-code}\n# slightly fancier version (with more customization)\nggacf <- function(series) {\n  significance_level <- qnorm((1 + 0.95)/2)/sqrt(sum(!is.na(series)))  \n  a <- acf(series, plot=F)\n  a.2<-with(a, data.frame(lag, acf))\n  g<- ggplot(a.2[-1,], aes(x=lag,y=acf)) + \n    geom_segment(mapping = aes(xend = lag, yend = 0), linewidth = 0.8) + \n    xlab('Lag') + ylab('ACF') + \n    geom_hline(yintercept=c(significance_level,-significance_level), linetype= 'dashed', color = 'dodgerblue4');\n\n  # fix scale for integer lags\n  if (all(a.2$lag%%1 == 0)) {\n    g<- g + scale_x_discrete(limits = factor(seq(1, max(a.2$lag))));\n  }\n  return(g);\n}\nggacf(wn)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n# Python code ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}