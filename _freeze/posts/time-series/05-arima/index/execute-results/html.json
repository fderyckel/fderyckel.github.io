{
  "hash": "27bc3dd61455f63c60d5ac0b555157d3",
  "result": {
    "markdown": "---\ntitle: \"05 - Arima\"\nauthor: \"François de Ryckel\"\ndate: \"2024-01-9\"\ncategories: [Time-Series]\ndescription: 'Introducing Arima - Autoregressive Integrated Moving Average.'\neditor: source\ndate-modified: \"2024-01-22\"\n---\n\n\n# Introduction \n\nThis post is about introducing ARIMA using the CPI data and various R framework for time series. Autoregressive because it is based on past value and moving average to smooth the time series data. \n\nOur [previous post](../03-autocorrelation/index.qmd) on autocorrelation and partial autocorelation could be considered as prior material.\n\nAutoregression is a class of linear model where the outcome variable is regressed on its previous values (lagged observations). \n$$Y_t = \\delta + \\phi_1 Y_{t-1} + \\phi_2 Y_{t-2} + \\cdots + \\phi_p Y_{t-p} + \\epsilon_t$$\nThis AR model used $p$ lags, hence we say it is of order $p$.\n\n* $\\delta$ is an intercept like term\n* $Y_{t-i}$ are the regressors (time series own lagged observations) with parameters $\\phi_{t-i}$\n* $\\epsilon$ is the error term\n\nMoving Average (MA) is another class of linear model where the outcome variable is regressed using its own previous error terms. \n$$Y_t = \\mu +  \\theta_1 \\epsilon_{t-1} + \\theta_2 \\epsilon_{t-2} + \\cdots + \\theta_q \\epsilon_{t-q} + \\epsilon_t$$ \nThis MA model used $q$ lags, hence we say it is of order $q$.\n\nPutting it all together, the outcome variable of an ARIMA model can be predicted: \n$$Y_t = \\{\\delta + \\phi_1 Y_{t-1} + \\phi_2 Y_{t-2} + \\cdots + \\phi_p Y_{t-p} + \\epsilon_t \\} + \\{\\mu +  \\theta_1 \\epsilon_{t-1} + \\theta_2 \\epsilon_{t-2} + \\cdots + \\theta_q \\epsilon_{t-q} + \\epsilon_t \\}$$\nThis can be simplify into: \n$$Y_t = \\delta + \\sum_{i=1}^p \\phi_i Y_{t-i} + \\sum_{j=1}^q \\theta_j \\epsilon_{t-j} + \\epsilon_t$$\n\nThe parameters of an ARIMA model are (p, d, q) : \n\n* $p$ - Autoregressive.  The number of lagged observations in the model.  Use the previous $n$ observations as predictors. \n* $d$ - Integrated.  The number of times the data is differenced to make the data stationary  \n* $q$ - the size of the moving average. Use previous errors to predict $Y_t$\n\nTo apply an ARIMA model to a set of data, we will use the US CPI Energy component that we downloaded on the [FED St-Louis website](https://fred.stlouisfed.org/series/CPIENGSL). \n\n# Application using R \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(modeltime)\nlibrary(timetk)\n\ndf <- read_csv('../../../raw_data/CPI_energy.csv') |> \n  select(date = DATE, cpi_energy = CPIENGNS)\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 803\nColumns: 2\n$ date       <date> 1957-01-01, 1957-02-01, 1957-03-01, 1957-04-01, 1957-05-01…\n$ cpi_energy <dbl> 21.3, 21.5, 21.6, 21.5, 21.4, 21.4, 21.5, 21.4, 21.5, 21.4,…\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## ARIMA using the base R framework \n\nWe need first to convert our df into a ts object. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_ts <- ts(df$cpi_energy, start = c(1957,01), frequency = 12, end = c(2023, 11))\nstr(df_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Time-Series [1:803] from 1957 to 2024: 21.3 21.5 21.6 21.5 21.4 21.4 21.5 21.4 21.5 21.4 ...\n```\n:::\n\n```{.r .cell-code}\nts.plot(df_ts, xlab = 'Date', ylab = 'Energy CPI')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nIt is usually a wise idea to check for outliers? An easy way to do this is using a boxplot. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(df_ts)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nWe use the ACF to determine the MA parameter (q) of the ARIMA model. \n\n* Significant spikes at specific lags in the ACF plot suggest potential MA terms at those lags \n* An ACF plot that cuts off sharply after a few lags often indicates a suitable MA model \n\n\n::: {.cell}\n\n```{.r .cell-code}\nacf(df_ts, lag.max = 100)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggacf(df_ts, num_lags = 100)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nData is clearly not stationary.  We will need to use differentiation to make it stationary. \n\nThe PCAF helps determine the AR (Autoregressive) order (p) in an ARIMA model.\n\n* Significant spikes at specific lags in the PACF plot suggest potential AR terms at those lags \n* A PACF plot that cuts off sharply after a few lags often indicates a suitable AR model \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacf(df_ts, lag.max = 100)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThis can be confirm with Augmented Dickey Fuller test\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntseries::adf.test(df_ts)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  df_ts\nDickey-Fuller = -2.4123, Lag order = 9, p-value = 0.4038\nalternative hypothesis: stationary\n```\n:::\n:::\n\nadf test confirm non-stationarity of our ts. We can differentiate our ts to make it stationary. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiff_ts <- diff(x = df_ts, lag = 1)\nts.plot(diff_ts)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntseries::adf.test(diff_ts)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in tseries::adf.test(diff_ts): p-value smaller than printed p-value\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  diff_ts\nDickey-Fuller = -9.4624, Lag order = 9, p-value = 0.01\nalternative hypothesis: stationary\n```\n:::\n:::\n\n\nWe can create our training and testing set. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_ts <- df_ts[1:793]\n```\n:::\n\n\nWe can now use ARIMA model using 1 and 1 for parameter (all we could see from acf)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult <- arima(train_ts, order = c(0, 1, 2))\nresult\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\narima(x = train_ts, order = c(0, 1, 2))\n\nCoefficients:\n         ma1     ma2\n      0.5197  0.0884\ns.e.  0.0356  0.0361\n\nsigma^2 estimated as 17.24:  log likelihood = -2251.54,  aic = 4509.07\n```\n:::\n\n```{.r .cell-code}\ntsdiag(result)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredict(result, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$pred\nTime Series:\nStart = 794 \nEnd = 796 \nFrequency = 1 \n[1] 290.5702 292.0037 292.0037\n\n$se\nTime Series:\nStart = 794 \nEnd = 796 \nFrequency = 1 \n[1]  4.152615  7.554318 10.082648\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult_df <- arima(df_ts, order = c(0, 1, 2))\nresult_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\narima(x = df_ts, order = c(0, 1, 2))\n\nCoefficients:\n         ma1     ma2\n      0.5033  0.0834\ns.e.  0.0347  0.0358\n\nsigma^2 estimated as 17.52:  log likelihood = -2286.24,  aic = 4578.49\n```\n:::\n\n```{.r .cell-code}\npredict(result_df, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$pred\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov      Dec\n2023                                                  273.7094\n2024 273.2768                                                 \n\n$se\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov      Dec\n2023                                                  4.185297\n2024 7.556805                                                 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult_df <- arima(df_ts, order = c(4, 1, 1))\nresult_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\narima(x = df_ts, order = c(4, 1, 1))\n\nCoefficients:\n         ar1      ar2     ar3      ar4      ma1\n      1.1419  -0.4870  0.1896  -0.1582  -0.6576\ns.e.  0.0776   0.0626  0.0531   0.0362   0.0722\n\nsigma^2 estimated as 16.92:  log likelihood = -2272.35,  aic = 4556.69\n```\n:::\n\n```{.r .cell-code}\npredict(result_df, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$pred\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov      Dec\n2023                                                  272.8635\n2024 270.8238                                                 \n\n$se\n          Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov      Dec\n2023                                                  4.112985\n2024 7.361178                                                 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nforecast::auto.arima(df_ts, trace = T, stepwise = F, approximation = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ARIMA(0,1,0)                               : 4762.801\n ARIMA(0,1,0)            with drift         : 4761.123\n ARIMA(0,1,0)(0,0,1)[12]                    : 4751.105\n ARIMA(0,1,0)(0,0,1)[12] with drift         : 4750.212\n ARIMA(0,1,0)(0,0,2)[12]                    : 4749.802\n ARIMA(0,1,0)(0,0,2)[12] with drift         : 4749.14\n ARIMA(0,1,0)(1,0,0)[12]                    : 4748.883\n ARIMA(0,1,0)(1,0,0)[12] with drift         : 4748.184\n ARIMA(0,1,0)(1,0,1)[12]                    : Inf\n ARIMA(0,1,0)(1,0,1)[12] with drift         : Inf\n ARIMA(0,1,0)(1,0,2)[12]                    : Inf\n ARIMA(0,1,0)(1,0,2)[12] with drift         : Inf\n ARIMA(0,1,0)(2,0,0)[12]                    : 4742.386\n ARIMA(0,1,0)(2,0,0)[12] with drift         : 4742.203\n ARIMA(0,1,0)(2,0,1)[12]                    : Inf\n ARIMA(0,1,0)(2,0,1)[12] with drift         : Inf\n ARIMA(0,1,0)(2,0,2)[12]                    : Inf\n ARIMA(0,1,0)(2,0,2)[12] with drift         : Inf\n ARIMA(0,1,1)                               : 4581.902\n ARIMA(0,1,1)            with drift         : 4581.821\n ARIMA(0,1,1)(0,0,1)[12]                    : 4577.654\n ARIMA(0,1,1)(0,0,1)[12] with drift         : 4577.884\n ARIMA(0,1,1)(0,0,2)[12]                    : 4573.756\n ARIMA(0,1,1)(0,0,2)[12] with drift         : 4574.212\n ARIMA(0,1,1)(1,0,0)[12]                    : 4576.446\n ARIMA(0,1,1)(1,0,0)[12] with drift         : 4576.758\n ARIMA(0,1,1)(1,0,1)[12]                    : Inf\n ARIMA(0,1,1)(1,0,1)[12] with drift         : Inf\n ARIMA(0,1,1)(1,0,2)[12]                    : Inf\n ARIMA(0,1,1)(1,0,2)[12] with drift         : Inf\n ARIMA(0,1,1)(2,0,0)[12]                    : 4568.379\n ARIMA(0,1,1)(2,0,0)[12] with drift         : 4569.08\n ARIMA(0,1,1)(2,0,1)[12]                    : Inf\n ARIMA(0,1,1)(2,0,1)[12] with drift         : Inf\n ARIMA(0,1,1)(2,0,2)[12]                    : Inf\n ARIMA(0,1,1)(2,0,2)[12] with drift         : Inf\n ARIMA(0,1,2)                               : 4578.515\n ARIMA(0,1,2)            with drift         : 4578.734\n ARIMA(0,1,2)(0,0,1)[12]                    : 4575.644\n ARIMA(0,1,2)(0,0,1)[12] with drift         : 4576.08\n ARIMA(0,1,2)(0,0,2)[12]                    : 4572.671\n ARIMA(0,1,2)(0,0,2)[12] with drift         : 4573.279\n ARIMA(0,1,2)(1,0,0)[12]                    : 4574.772\n ARIMA(0,1,2)(1,0,0)[12] with drift         : 4575.261\n ARIMA(0,1,2)(1,0,1)[12]                    : Inf\n ARIMA(0,1,2)(1,0,1)[12] with drift         : Inf\n ARIMA(0,1,2)(1,0,2)[12]                    : Inf\n ARIMA(0,1,2)(1,0,2)[12] with drift         : Inf\n ARIMA(0,1,2)(2,0,0)[12]                    : 4568.289\n ARIMA(0,1,2)(2,0,0)[12] with drift         : 4569.079\n ARIMA(0,1,2)(2,0,1)[12]                    : Inf\n ARIMA(0,1,2)(2,0,1)[12] with drift         : Inf\n ARIMA(0,1,3)                               : 4579.677\n ARIMA(0,1,3)            with drift         : 4580.023\n ARIMA(0,1,3)(0,0,1)[12]                    : 4577.191\n ARIMA(0,1,3)(0,0,1)[12] with drift         : 4577.708\n ARIMA(0,1,3)(0,0,2)[12]                    : 4574.269\n ARIMA(0,1,3)(0,0,2)[12] with drift         : 4574.946\n ARIMA(0,1,3)(1,0,0)[12]                    : 4576.379\n ARIMA(0,1,3)(1,0,0)[12] with drift         : 4576.941\n ARIMA(0,1,3)(1,0,1)[12]                    : Inf\n ARIMA(0,1,3)(1,0,1)[12] with drift         : Inf\n ARIMA(0,1,3)(2,0,0)[12]                    : 4569.998\n ARIMA(0,1,3)(2,0,0)[12] with drift         : 4570.839\n ARIMA(0,1,4)                               : 4581.69\n ARIMA(0,1,4)            with drift         : 4582.053\n ARIMA(0,1,4)(0,0,1)[12]                    : 4579.221\n ARIMA(0,1,4)(0,0,1)[12] with drift         : 4579.733\n ARIMA(0,1,4)(1,0,0)[12]                    : 4578.408\n ARIMA(0,1,4)(1,0,0)[12] with drift         : 4578.96\n ARIMA(0,1,5)                               : 4583.72\n ARIMA(0,1,5)            with drift         : 4584.063\n ARIMA(1,1,0)                               : 4592.114\n ARIMA(1,1,0)            with drift         : 4592.78\n ARIMA(1,1,0)(0,0,1)[12]                    : 4590.795\n ARIMA(1,1,0)(0,0,1)[12] with drift         : 4591.591\n ARIMA(1,1,0)(0,0,2)[12]                    : 4589.897\n ARIMA(1,1,0)(0,0,2)[12] with drift         : 4590.8\n ARIMA(1,1,0)(1,0,0)[12]                    : 4590.336\n ARIMA(1,1,0)(1,0,0)[12] with drift         : 4591.158\n ARIMA(1,1,0)(1,0,1)[12]                    : Inf\n ARIMA(1,1,0)(1,0,1)[12] with drift         : Inf\n ARIMA(1,1,0)(1,0,2)[12]                    : Inf\n ARIMA(1,1,0)(1,0,2)[12] with drift         : Inf\n ARIMA(1,1,0)(2,0,0)[12]                    : 4587.308\n ARIMA(1,1,0)(2,0,0)[12] with drift         : 4588.314\n ARIMA(1,1,0)(2,0,1)[12]                    : Inf\n ARIMA(1,1,0)(2,0,1)[12] with drift         : Inf\n ARIMA(1,1,0)(2,0,2)[12]                    : Inf\n ARIMA(1,1,0)(2,0,2)[12] with drift         : Inf\n ARIMA(1,1,1)                               : 4577.984\n ARIMA(1,1,1)            with drift         : 4578.289\n ARIMA(1,1,1)(0,0,1)[12]                    : 4575.351\n ARIMA(1,1,1)(0,0,1)[12] with drift         : 4575.838\n ARIMA(1,1,1)(0,0,2)[12]                    : 4572.434\n ARIMA(1,1,1)(0,0,2)[12] with drift         : 4573.078\n ARIMA(1,1,1)(1,0,0)[12]                    : 4574.518\n ARIMA(1,1,1)(1,0,0)[12] with drift         : 4575.051\n ARIMA(1,1,1)(1,0,1)[12]                    : Inf\n ARIMA(1,1,1)(1,0,1)[12] with drift         : Inf\n ARIMA(1,1,1)(1,0,2)[12]                    : Inf\n ARIMA(1,1,1)(1,0,2)[12] with drift         : Inf\n ARIMA(1,1,1)(2,0,0)[12]                    : 4568.139\n ARIMA(1,1,1)(2,0,0)[12] with drift         : 4568.95\n ARIMA(1,1,1)(2,0,1)[12]                    : Inf\n ARIMA(1,1,1)(2,0,1)[12] with drift         : Inf\n ARIMA(1,1,2)                               : 4579.966\n ARIMA(1,1,2)            with drift         : 4580.292\n ARIMA(1,1,2)(0,0,1)[12]                    : 4577.355\n ARIMA(1,1,2)(0,0,1)[12] with drift         : 4577.857\n ARIMA(1,1,2)(0,0,2)[12]                    : 4574.418\n ARIMA(1,1,2)(0,0,2)[12] with drift         : 4575.085\n ARIMA(1,1,2)(1,0,0)[12]                    : 4576.524\n ARIMA(1,1,2)(1,0,0)[12] with drift         : 4577.071\n ARIMA(1,1,2)(1,0,1)[12]                    : Inf\n ARIMA(1,1,2)(1,0,1)[12] with drift         : Inf\n ARIMA(1,1,2)(2,0,0)[12]                    : 4570.12\n ARIMA(1,1,2)(2,0,0)[12] with drift         : 4570.951\n ARIMA(1,1,3)                               : 4581.695\n ARIMA(1,1,3)            with drift         : 4582.053\n ARIMA(1,1,3)(0,0,1)[12]                    : 4579.222\n ARIMA(1,1,3)(0,0,1)[12] with drift         : 4579.743\n ARIMA(1,1,3)(1,0,0)[12]                    : 4578.411\n ARIMA(1,1,3)(1,0,0)[12] with drift         : 4578.979\n ARIMA(1,1,4)                               : 4573.756\n ARIMA(1,1,4)            with drift         : 4571.09\n ARIMA(2,1,0)                               : 4579.505\n ARIMA(2,1,0)            with drift         : 4579.69\n ARIMA(2,1,0)(0,0,1)[12]                    : 4577.142\n ARIMA(2,1,0)(0,0,1)[12] with drift         : 4577.505\n ARIMA(2,1,0)(0,0,2)[12]                    : 4575.062\n ARIMA(2,1,0)(0,0,2)[12] with drift         : 4575.574\n ARIMA(2,1,0)(1,0,0)[12]                    : 4576.421\n ARIMA(2,1,0)(1,0,0)[12] with drift         : 4576.826\n ARIMA(2,1,0)(1,0,1)[12]                    : Inf\n ARIMA(2,1,0)(1,0,1)[12] with drift         : Inf\n ARIMA(2,1,0)(1,0,2)[12]                    : Inf\n ARIMA(2,1,0)(1,0,2)[12] with drift         : Inf\n ARIMA(2,1,0)(2,0,0)[12]                    : 4571.428\n ARIMA(2,1,0)(2,0,0)[12] with drift         : 4572.095\n ARIMA(2,1,0)(2,0,1)[12]                    : Inf\n ARIMA(2,1,0)(2,0,1)[12] with drift         : Inf\n ARIMA(2,1,1)                               : 4579.893\n ARIMA(2,1,1)            with drift         : 4580.248\n ARIMA(2,1,1)(0,0,1)[12]                    : 4577.321\n ARIMA(2,1,1)(0,0,1)[12] with drift         : 4577.839\n ARIMA(2,1,1)(0,0,2)[12]                    : 4574.356\n ARIMA(2,1,1)(0,0,2)[12] with drift         : 4575.04\n ARIMA(2,1,1)(1,0,0)[12]                    : 4576.493\n ARIMA(2,1,1)(1,0,0)[12] with drift         : 4577.055\n ARIMA(2,1,1)(1,0,1)[12]                    : Inf\n ARIMA(2,1,1)(1,0,1)[12] with drift         : Inf\n ARIMA(2,1,1)(2,0,0)[12]                    : 4570.052\n ARIMA(2,1,1)(2,0,0)[12] with drift         : 4570.9\n ARIMA(2,1,2)                               : 4581.576\n ARIMA(2,1,2)            with drift         : 4582.003\n ARIMA(2,1,2)(0,0,1)[12]                    : Inf\n ARIMA(2,1,2)(0,0,1)[12] with drift         : Inf\n ARIMA(2,1,2)(1,0,0)[12]                    : Inf\n ARIMA(2,1,2)(1,0,0)[12] with drift         : Inf\n ARIMA(2,1,3)                    : Inf\n ARIMA(2,1,3) with drift         : Inf\n ARIMA(3,1,0)                               : 4581.026\n ARIMA(3,1,0)            with drift         : 4581.307\n ARIMA(3,1,0)(0,0,1)[12]                    : 4578.438\n ARIMA(3,1,0)(0,0,1)[12] with drift         : 4578.91\n ARIMA(3,1,0)(0,0,2)[12]                    : 4575.713\n ARIMA(3,1,0)(0,0,2)[12] with drift         : 4576.374\n ARIMA(3,1,0)(1,0,0)[12]                    : 4577.627\n ARIMA(3,1,0)(1,0,0)[12] with drift         : 4578.148\n ARIMA(3,1,0)(1,0,1)[12]                    : Inf\n ARIMA(3,1,0)(1,0,1)[12] with drift         : Inf\n ARIMA(3,1,0)(2,0,0)[12]                    : 4571.48\n ARIMA(3,1,0)(2,0,0)[12] with drift         : 4572.324\n ARIMA(3,1,1)                               : 4581.285\n ARIMA(3,1,1)            with drift         : 4581.576\n ARIMA(3,1,1)(0,0,1)[12]                    : 4578.762\n ARIMA(3,1,1)(0,0,1)[12] with drift         : 4579.224\n ARIMA(3,1,1)(1,0,0)[12]                    : 4577.945\n ARIMA(3,1,1)(1,0,0)[12] with drift         : 4578.452\n ARIMA(3,1,2)                               : 4568.698\n ARIMA(3,1,2) with drift         : Inf\n ARIMA(4,1,0)                               : 4575.634\n ARIMA(4,1,0)            with drift         : 4575.534\n ARIMA(4,1,0)(0,0,1)[12]                    : 4574.175\n ARIMA(4,1,0)(0,0,1)[12] with drift         : 4574.312\n ARIMA(4,1,0)(1,0,0)[12]                    : 4573.622\n ARIMA(4,1,0)(1,0,0)[12] with drift         : 4573.812\n ARIMA(4,1,1)                               : 4556.801\n ARIMA(4,1,1)            with drift         : 4554.628\n ARIMA(5,1,0)                               : 4561.352\n ARIMA(5,1,0)            with drift         : 4560.508\n\n\n\n Best model: ARIMA(4,1,1)            with drift         \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: df_ts \nARIMA(4,1,1) with drift \n\nCoefficients:\n         ar1      ar2     ar3      ar4      ma1   drift\n      1.1535  -0.4942  0.1912  -0.1603  -0.6749  0.3205\ns.e.  0.0758   0.0622  0.0534   0.0365   0.0703  0.1523\n\nsigma^2 = 16.95:  log likelihood = -2270.24\nAIC=4554.49   AICc=4554.63   BIC=4587.3\n```\n:::\n:::\n\n\n\n# Using modeltime framework \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> plot_time_series(date, cpi_energy, .interactive = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\nwith model time, it is pretty easy to do get the value for arima. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncv_splits <- df |> \n  time_series_split(date_var = date, assess = '13 months', cumulative = TRUE)\n\ncv_splits |> \n  tk_time_series_cv_plan() |>\n  plot_time_series_cv_plan(.date_var = date, .value = cpi_energy, .interactive = FALSE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tibble       3.2.1\n✔ infer        1.0.5     ✔ tidyr        1.3.0\n✔ modeldata    1.2.0     ✔ tune         1.1.2\n✔ parsnip      1.1.1     ✔ workflows    1.1.3\n✔ purrr        1.0.2     ✔ workflowsets 1.0.1\n✔ recipes      1.0.9     ✔ yardstick    1.2.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard()  masks scales::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n```\n:::\n\n```{.r .cell-code}\nlibrary(parsnip)\nlibrary(modeltime)\n\nmodel_fit_arima <- arima_reg() |> \n  set_engine('auto_arima') |>\n  fit(cpi_energy ~ date, training(cv_splits))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nfrequency = 12 observations per 1 year\n```\n:::\n\n```{.r .cell-code}\nmodel_fit_arima\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nparsnip model object\n\nSeries: outcome \nARIMA(0,1,2)(0,0,2)[12] \n\nCoefficients:\n         ma1     ma2    sma1    sma2\n      0.5229  0.0895  0.0733  0.0907\ns.e.  0.0356  0.0358  0.0400  0.0359\n\nsigma^2 = 16.45:  log likelihood = -2222.54\nAIC=4455.07   AICc=4455.15   BIC=4478.42\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}